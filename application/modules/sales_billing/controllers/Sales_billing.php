<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class sales_billing extends MY_Controller 
{
	public function __construct() 
	{
		parent::__construct();
		if(!$this->session->has_userdata('user_id') || !$this->session->user_id){
			redirect('login');
		}
		$this->load->model('sales_billing_model','sbm');
		$this->load->model('client/client_model','cm');
		$this->load->library('form_validation');
	}
	
	public function index()
	{
		redirect('sales_billing/add_sales_billing');
	}
	
	public function add_sales_billing()
	{
		$client_id = $this->uri->segment(3);
		
		$sales_billing_id = $this->sbm->getSalesBillingId($client_id);
		$data['billing_method'] = $this->sbm->billing_method($client_id);
		if($data['billing_method']->billing_method =='C')  
		{
			if(!empty($sales_billing_id->sales_billing_id))
			{
				redirect('sales_billing/edit_sales_billing/'.$client_id.'/'.$sales_billing_id->sales_billing_id, 'refresh');
			}
		}
		
		
		$data['billing_state'] = $this->sbm->getBranch($client_id) ;
		$data['billing_branch'] = $this->sbm->getBillingBranch($client_id) ;
		

		$state_all=$this->sbm->get_state_all();
		$state_all_list = array('' => 'Select State');
        foreach($state_all as $state){
            $state_all_list[$state->state_name] = $state->state_name;
        }
        $data['state_all'] = $state_all_list;
		
		
		//print_r('Partha'); exit;
		if(!empty($this->input->post())){
			
			$this->form_validation->set_rules('client_name','Client Name','trim|required');
			$this->form_validation->set_rules('billstartdate','Bill Start Date','trim|required');
			$this->form_validation->set_rules('addressline1','Addressline 1','trim|required');
			$this->form_validation->set_rules('addressline2','Addressline 2','trim');
			$this->form_validation->set_rules('addressline3','Addressline 3','trim');
			$this->form_validation->set_rules('state_id','Start','trim|required');
			$this->form_validation->set_rules('city_id','City','trim|required');
			$this->form_validation->set_rules('pincode','Pin Code','trim|required');
			$this->form_validation->set_rules('contact_name','Contact Name','trim|required');
			//$this->form_validation->set_rules('q_gen_by','Query Generated By','trim|required');
			$this->form_validation->set_rules('contact_no','Contace No','trim|required');
			$this->form_validation->set_rules('contact_email','Email','trim|required');
			$this->form_validation->set_rules('cont_agre','Contract Agreement','trim|required');
			$this->form_validation->set_rules('servicecharges','Service Charges','trim|required');
			$this->form_validation->set_rules('fixed','Bill Type','trim|required');
			$this->form_validation->set_rules('agreementvalidity','Agreement Validity','trim|required');
			$this->form_validation->set_rules('pf','PF','trim|required');
			$this->form_validation->set_rules('esi','ESI','trim|required');
			$this->form_validation->set_rules('contractrewexp','Contract Renewal/Expiry ','trim|required');
			$this->form_validation->set_rules('cars','Cars','trim|required');
			$this->form_validation->set_rules('bonus','Bonus','trim|required');
			$this->form_validation->set_rules('agreementsummary','Agreement Summary','trim|required');
			$this->form_validation->set_rules('rc_charge','Releiving Charges','trim|required');
			$this->form_validation->set_rules('site_at','Site At ','trim|required');
			$this->form_validation->set_rules('po_no','PO NO ','trim|required');
			$this->form_validation->set_rules('gstin','GSTIN ','trim|required');
			//$this->form_validation->set_rules('hsn','HSN ','trim|required');
			$this->form_validation->set_rules('contract_value','Contract Amount ','trim|required');
			$this->form_validation->set_rules('cat_id','Catagory ','trim|required');
			$this->form_validation->set_rules('ser_cat_id','Service Category ','trim|required');
			$this->form_validation->set_rules('statecode','State Code ','trim|required');
			$this->form_validation->set_rules('statename','State Name ','trim|required');
			$this->form_validation->set_rules('c_pan','PAN ','trim|required');
			$this->form_validation->set_rules('rcm','RCM ','trim|required');
			$this->form_validation->set_rules('cess','cess ','trim');
			//$this->form_validation->set_rules('p_supply','Supply ','trim|required');
			$this->form_validation->set_rules('ad_tax','TAX ','trim|required');
			$this->form_validation->set_rules('gst_status','Status ','trim|required');
			//$this->form_validation->set_rules('enclosuers','Enclosuers ','trim|required');
			if($data['billing_method']->billing_method =='S')  
			{
				$this->form_validation->set_rules('branch_state_id','Branch state ','trim|required');
			}
			elseif($data['billing_method']->billing_method =='B')
			{
				$this->form_validation->set_rules('billing_branch_id','Billing branch name ','trim|required');
			}
			
			
			if ($this->form_validation->run() == TRUE){
				$client_id  = $this->input->post('client_id');
				$billstartdate  = $this->input->post('billstartdate');
				$addressline1  = $this->input->post('addressline1');
				$addressline2  = $this->input->post('addressline2');
				$addressline3  = $this->input->post('addressline3');
				$state_id  = $this->input->post('state_id');
				$city_id  = $this->input->post('city_id');
				$pincode  = $this->input->post('pincode');
				$contact_name  = $this->input->post('contact_name');
				$q_gen_by  = $this->input->post('q_gen_by');
				$contact_no  = $this->input->post('contact_no');
				$contact_email  = $this->input->post('contact_email');
				$cont_agre  = $this->input->post('cont_agre');
				$servicecharges  = $this->input->post('servicecharges');
				$fixed  = $this->input->post('fixed');
				//$city_id  = $this->input->post('city_id');
				$tel_nos  = $this->input->post('tel_nos');
				//$pincode  = $this->input->post('pincode');
				$contract_value  = $this->input->post('contract_value');
				$agreementvalidity  = $this->input->post('agreementvalidity');
				$fax  = $this->input->post('fax');
				$dateofcontract  = $this->input->post('dateofcontract');
				$pf  = $this->input->post('pf');
				$esi  = $this->input->post('esi');
				$contractrewexp  = $this->input->post('contractrewexp');
				$cars  = $this->input->post('cars');
				$bonus  = $this->input->post('bonus');
				$agreementsummary  = $this->input->post('agreementsummary');
				$rc_charge  = $this->input->post('rc_charge');
				$bill_pre  = $this->input->post('bill_pre');
				$site_at  = $this->input->post('site_at');
				$po_no  = $this->input->post('po_no');
				$gstin  = $this->input->post('gstin');
				$hsn  = $this->input->post('hsn');
				$cat_id  = $this->input->post('cat_id');
				$ser_cat_id  = $this->input->post('ser_cat_id');
				$cgst  = $this->input->post('cgst');
				$sgst  = $this->input->post('sgst');
				$igst  = $this->input->post('igst');
				$statecode  = $this->input->post('statecode');
				$statename  = $this->input->post('statename');
				$c_pan  = $this->input->post('c_pan');
				$utgst  = $this->input->post('utgst');
				$rcm  = $this->input->post('rcm');
				$cess  = $this->input->post('cess');
				$supply  = $this->input->post('p_supply');
				$ad_tax  = $this->input->post('ad_tax');
				$gst_status  = $this->input->post('gst_status');
				$clause  = $this->input->post('clause');
				$enclosuers  = $this->input->post('enclosuers');
				$cont_agri_date  = $this->input->post('cont_agri_date');
				$created_by  = $this->session->user_id;

				$branch_state_id='';
				$billing_branch_id='';
				if($data['billing_method']->billing_method =='S')
				{
					$branch_state_id = $this->input->post('branch_state_id');
					$result=$this->sbm->entry_check_state($client_id,$branch_state_id);
					if(!empty($result))
					{
						$this->session->set_flashdata('msg', 'Sales/Billing Branch State Allready Added');
						redirect('sales_billing/add_sales_billing/' . $client_id, 'refresh');
					}
				}
				elseif($data['billing_method']->billing_method =='B')
				{
					$billing_branch_id = $this->input->post('billing_branch_id');
					$result=$this->sbm->entry_check_branch($client_id,$billing_branch_id);
					if(!empty($result))
					{
						$this->session->set_flashdata('msg', 'Sales/Billing Branch Allready Added');
						redirect('sales_billing/add_sales_billing/' . $client_id, 'refresh');
					}
				}
				//print_r($cat_id); exit;
				//contract_value

				$this->sbm->insert_sales_billing($client_id,$branch_state_id,$billing_branch_id,$billstartdate,$addressline1,$addressline2,$addressline3,$state_id,$city_id,$tel_nos,$pincode,$agreementvalidity,$contract_value,$fax,$dateofcontract,$pf,$esi,$contractrewexp,$cars,$bonus,$agreementsummary,$rc_charge,$bill_pre,$site_at,$po_no,$gstin,$hsn,$cgst,$sgst,$igst,$statecode,$statename,$c_pan,$utgst,$rcm,floatval($cess),$supply,$ad_tax,$gst_status,$created_by,$contact_name,$contact_no,$contact_email,$servicecharges,$fixed,$q_gen_by,$cont_agre,$cat_id,$ser_cat_id,$clause,$enclosuers,$cont_agri_date);	
				
				$this->session->set_flashdata('msg', 'Sales/Billing successfully added');
				redirect('sales_billing/add_sales_billing/' . $client_id, 'refresh');
				
			}
		}
		/*else{
			print_r('Partha'); exit;
		}*/
		$data['list'] = $this->sbm->get_all_billing($client_id);
		$data['client'] = $this->cm->getClientName($client_id);
		
		
		$data['mode'] = 'editable';
		if($data['client']->submit_for_approval == 1){
			$data['mode'] = 'readonly';
		}
		
        $state_obj = $this->cm->get_all_state();
        $state_list = array('' => 'Select State');
        foreach($state_obj as $state){
            $state_list[$state->state_id] = $state->state_name;
        }
        $data['state'] = $state_list;
		
        $city_list = array('' => 'Select City');
        if(!empty($this->input->post('state_id'))){
			$city_obj = $this->cm->getCity($this->input->post('state_id'));
			foreach($city_obj as $city){
				$city_list[$city['city_id']] = $city['city_name'];
            }
        }
        $data['city'] = $city_list;
		
		$category_obj = $this->cm->get_all_category();
        $category_list = array('' => 'Select Catagory');
        foreach($category_obj as $category){
            $category_list[$category->gst_category_id] = $category->gst_category_name;
        }
        $data['category'] = $category_list;
		
		$sercategory_obj = $this->cm->get_ser_category();
        $sercategory_list = array('' => 'Select Service Catagory');
        foreach($sercategory_obj as $sercategory){
            $sercategory_list[$sercategory->ser_id] = $sercategory->ser_name;
        }
        $data['sercategory'] = $sercategory_list;
		//pr($data);
		//pr($data);
		
		$this->template->write('title', 'Dashboard', TRUE);
		
		//$this->template->add_js('assets/js/jquery.dataTables.min.js');
        //$this->template->add_js('assets/js/dataTables.bootstrap4.min.js');
		$this->template->add_js('assets/js/select2.min.js');
		$this->template->add_js('assets/js/bootstrap-select.js');
		
		//$this->template->add_css('assets/css/dataTables.bootstrap4.min.css');
		$this->template->add_css('assets/css/select2.css');
		$this->template->add_css('assets/css/bootstrap-select.css');
		
		$this->template->write_view('content', 'add_sales_billing', $data, TRUE);
        $this->template->render();
	}
	
	public function edit_sales_billing()
	{

		
		$client_id = $this->uri->segment(3);
		$sales_billing_id = $this->uri->segment(4);
		
		$data['sales_billing_id'] = $sales_billing_id;
		$data['client'] = $this->cm->getClientName($client_id);  
		$data['billing_method'] = $this->sbm->billing_method($client_id);
		$data['billing_state'] = $this->sbm->getBranch($client_id) ;
		$data['billing_branch'] = $this->sbm->getBillingBranch($client_id) ;

		
		$data['mode'] = 'editable';
		if($data['client']->submit_for_approval == 1){
			$data['mode'] = 'readonly';
		}
		
		$category_obj = $this->cm->get_all_category();
        $category_list = array('' => 'Select Catagory');
        foreach($category_obj as $category){
            $category_list[$category->gst_category_id] = $category->gst_category_name;
        }
        $data['category'] = $category_list;
		
		$sercategory_obj = $this->cm->get_ser_category();
        $sercategory_list = array('' => 'Select Service Catagory');
        foreach($sercategory_obj as $sercategory){
            $sercategory_list[$sercategory->ser_id] = $sercategory->ser_name;
        }
        $data['sercategory'] = $sercategory_list;
		
		$data['details'] = $this->sbm->get_details($sales_billing_id);
		$state_all=$this->sbm->get_state_all();
		$state_all_list = array('' => 'Select State');
        foreach($state_all as $state){
            $state_all_list[$state->state_name] = $state->state_name;
        }
        $data['state_all'] = $state_all_list;
		
		$state_obj = $this->cm->get_all_state();
        $state_list = array('' => 'Select State');
        foreach($state_obj as $state){
            $state_list[$state->state_id] = $state->state_name;
        }
        $data['state'] = $state_list;

        $city_list = array('' => 'Select City');
        if(!empty($this->input->post('state_id'))){
            $city_obj = $this->cm->getCity($this->input->post('state_id'));
			foreach($city_obj as $city){
                $city_list[$city['city_id']] = $city['city_name'];
            }
        }
        else {
            $city_obj = $this->cm->get_city($data['details']->state_id);
			foreach($city_obj as $city){
                $city_list[$city->city_id] = $city->city_name;
            }
        }
        $data['city'] = $city_list;
		
		//pr($data);
		
		if(!empty($this->input->post())){

			$this->form_validation->set_rules('client_name','Client Name','trim|required');
			$this->form_validation->set_rules('billstartdate','Bill Start Date','trim|required');
			$this->form_validation->set_rules('addressline1','Addressline 1','trim|required');
			$this->form_validation->set_rules('addressline2','Addressline 2','trim');
			$this->form_validation->set_rules('addressline3','Addressline 3','trim');
			$this->form_validation->set_rules('state_id','Start','trim|required');
			$this->form_validation->set_rules('city_id','City','trim|required');
			$this->form_validation->set_rules('pincode','Pin Code','trim|required');
			$this->form_validation->set_rules('contact_name','Contact Name','trim|required');
			//$this->form_validation->set_rules('q_gen_by','Query Generated By','trim|required');
			$this->form_validation->set_rules('contact_no','Contace No','trim|required');
			$this->form_validation->set_rules('contact_email','Email','trim|required');
			$this->form_validation->set_rules('cont_agre','Contract Agreement','trim|required');
			$this->form_validation->set_rules('servicecharges','Service Charges','trim|required');
			$this->form_validation->set_rules('fixed','Bill Type','trim|required');
			$this->form_validation->set_rules('agreementvalidity','Agreement Validity','trim|required');
			$this->form_validation->set_rules('pf','PF','trim|required');
			$this->form_validation->set_rules('esi','ESI','trim|required');
			$this->form_validation->set_rules('contractrewexp','Contract Renewal/Expiry ','trim|required');
			$this->form_validation->set_rules('cars','Cars','trim|required');
			$this->form_validation->set_rules('bonus','Bonus','trim|required');
			$this->form_validation->set_rules('agreementsummary','Agreement Summary','trim|required');
			$this->form_validation->set_rules('rc_charge','Releiving Charges','trim|required');
			//$this->form_validation->set_rules('bill_pre','Bill Prefix if any','trim|required');
			$this->form_validation->set_rules('site_at','Site At ','trim|required');
			$this->form_validation->set_rules('po_no','PO NO ','trim|required');
			$this->form_validation->set_rules('gstin','GSTIN ','trim|required');
			//$this->form_validation->set_rules('hsn','HSN ','trim|required');
			$this->form_validation->set_rules('contract_value','Contract Amount ','trim|required');
			$this->form_validation->set_rules('cat_id','Catagory ','trim|required');
			$this->form_validation->set_rules('ser_cat_id','Service Category ','trim|required');
			//$this->form_validation->set_rules('cgst','CGST ','trim|required');
			//$this->form_validation->set_rules('sgst','SGST ','trim|required');
			//$this->form_validation->set_rules('igst','IGST ','trim|required');
			$this->form_validation->set_rules('statecode','State Code ','trim|required');
			$this->form_validation->set_rules('statename','State Name ','trim|required');
			$this->form_validation->set_rules('c_pan','PAN ','trim|required');
			//$this->form_validation->set_rules('utgst','UTGST ','trim|required');
			$this->form_validation->set_rules('rcm','RCM ','trim|required');
			$this->form_validation->set_rules('cess','cess ','trim');
			//$this->form_validation->set_rules('p_supply','Supply ','trim|required');
			$this->form_validation->set_rules('ad_tax','TAX ','trim|required');
			$this->form_validation->set_rules('gst_status','Status ','trim|required');
			//$this->form_validation->set_rules('clause','Clause ','trim|required');
			//$this->form_validation->set_rules('enclosuers','Enclosuers ','trim|required');
			//$this->form_validation->set_rules('cont_agri_date','Contact Agreement Date','trim|required');
			if($data['billing_method']->billing_method =='S')  
			{
				$this->form_validation->set_rules('branch_state_id','Branch state ','trim|required');
			}
			elseif($data['billing_method']->billing_method =='B')
			{
				$this->form_validation->set_rules('billing_branch_id','Billing branch name ','trim|required');
			}
			
			if ($this->form_validation->run() == TRUE){
				$client_id  = $this->input->post('client_id');
				$billstartdate  = $this->input->post('billstartdate');
				$addressline1  = $this->input->post('addressline1');
				$addressline2  = $this->input->post('addressline2');
				$addressline3  = $this->input->post('addressline3');
				$state_id  = $this->input->post('state_id');
				$city_id  = $this->input->post('city_id');
				$pincode  = $this->input->post('pincode');
				$contact_name  = $this->input->post('contact_name');
				$q_gen_by  = $this->input->post('q_gen_by');
				$contact_no  = $this->input->post('contact_no');
				$contact_email  = $this->input->post('contact_email');
				$cont_agre  = $this->input->post('cont_agre');
				$servicecharges  = $this->input->post('servicecharges');
				$fixed  = $this->input->post('fixed');
				//$city_id  = $this->input->post('city_id');
				$tel_nos  = $this->input->post('tel_nos');
				//$pincode  = $this->input->post('pincode');
				$contract_value  = $this->input->post('contract_value');
				$agreementvalidity  = $this->input->post('agreementvalidity');
				$fax  = $this->input->post('fax');
				$dateofcontract  = $this->input->post('dateofcontract');
				$pf  = $this->input->post('pf');
				$esi  = $this->input->post('esi');
				$contractrewexp  = $this->input->post('contractrewexp');
				$cars  = $this->input->post('cars');
				$bonus  = $this->input->post('bonus');
				$agreementsummary  = $this->input->post('agreementsummary');
				$rc_charge  = $this->input->post('rc_charge');
				$bill_pre  = $this->input->post('bill_pre');
				$site_at  = $this->input->post('site_at');
				$po_no  = $this->input->post('po_no');
				$gstin  = $this->input->post('gstin');
				$hsn  = $this->input->post('hsn');
				$cat_id  = $this->input->post('cat_id');
				$ser_cat_id  = $this->input->post('ser_cat_id');
				$cgst  = $this->input->post('cgst');
				$sgst  = $this->input->post('sgst');
				$igst  = $this->input->post('igst');
				$statecode  = $this->input->post('statecode');
				$statename  = $this->input->post('statename');
				$c_pan  = $this->input->post('c_pan');
				$utgst  = $this->input->post('utgst');
				$rcm  = $this->input->post('rcm');
				$cess  = $this->input->post('cess');
				$supply  = $this->input->post('p_supply');
				$ad_tax  = $this->input->post('ad_tax');
				$gst_status  = $this->input->post('gst_status');
				$clause  = $this->input->post('clause');
				$enclosuers  = $this->input->post('enclosuers');
				$cont_agri_date  = $this->input->post('cont_agri_date');
				$logged_user_id  = $this->session->user_id;
				$branch_state_id='';
				$billing_branch_id='';
				if($data['billing_method']->billing_method =='S')
				{
					$branch_state_id = $this->input->post('branch_state_id');
					$result=$this->sbm->update_entry_check_state($client_id,$sales_billing_id,$branch_state_id);
					if(!empty($result))
					{
						$this->session->set_flashdata('msg', 'Sales/Billing Branch State Allready Added');
						redirect('sales_billing/edit_sales_billing/' . $client_id . '/' . $sales_billing_id, 'refresh');
					}
				}
				elseif($data['billing_method']->billing_method =='B')
				{
					$billing_branch_id = $this->input->post('billing_branch_id');
	
					$result=$this->sbm->update_entry_check_branch($client_id,$sales_billing_id,$billing_branch_id);
					if(!empty($result))
					{
						$this->session->set_flashdata('msg', 'Sales/Billing Branch Allready Added');
						redirect('sales_billing/edit_sales_billing/' . $client_id . '/' . $sales_billing_id, 'refresh');
					}
				}

				//print_r($cat_id); exit;
				//
				$this->sbm->update_sales_billing($sales_billing_id, $client_id,$branch_state_id,$billing_branch_id, $billstartdate, $addressline1, $addressline2, $addressline3, $state_id, $city_id, $tel_nos, $pincode, $agreementvalidity,$contract_value, $fax, $dateofcontract, $pf, $esi, $contractrewexp, $cars, $bonus, $agreementsummary, $rc_charge, $bill_pre, $site_at, $po_no, $gstin, $hsn, $cgst, $sgst, $igst, $statecode, $statename, $c_pan, $utgst, $rcm, floatval($cess), $supply, $ad_tax, $gst_status, $logged_user_id, $contact_name, $contact_no, $contact_email, $servicecharges, $fixed, $q_gen_by, $cont_agre, $cat_id, $ser_cat_id, $clause, $enclosuers, $cont_agri_date);	
				
				$this->session->set_flashdata('msg', 'Sales/Billing successfully updated');
				redirect('sales_billing/edit_sales_billing/' . $client_id . '/' . $sales_billing_id, 'refresh');
				
			}
		}
		/*else{
			print_r('Partha'); exit;
		}*/

		//pr($data);

		$this->template->write('title', 'Dashboard', TRUE);
		
		//$this->template->add_js('assets/js/jquery.dataTables.min.js');
        //$this->template->add_js('assets/js/dataTables.bootstrap4.min.js');
		$this->template->add_js('assets/js/select2.min.js');
		$this->template->add_js('assets/js/bootstrap-select.js');
		
		//$this->template->add_css('assets/css/dataTables.bootstrap4.min.css');
		$this->template->add_css('assets/css/select2.css');
		$this->template->add_css('assets/css/bootstrap-select.css');
		
		$this->template->write_view('content', 'edit_sales_billing', $data, TRUE);
        $this->template->render();
	}

	public function state_code()
	{
		$state_name=$this->input->post('state_name');
		$state_row=$this->sbm->get_state_code($state_name);
		if(!empty($state_row))
		{
			echo json_encode(array('result'=>$state_row->state_code, 'newHash' => $this->security->get_csrf_hash()));
			
		}
		else
		{
			echo json_encode(['result'=>'']);
		}
		
	}
	
}

	